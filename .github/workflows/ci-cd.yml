name: CI/CD Pipeline

permissions:
  contents: read

on:
  push:
    branches: [master, develop, develop-backend]
  pull_request:
    branches: [master, develop, develop-backend]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

jobs:
  build:
    uses: ./.github/workflows/reusable-ci.yml
    if: |
      github.event_name == 'push' &&
      github.ref_name == 'master' &&
      !contains(github.event.head_commit.message, 'chore(release)') &&
      (startsWith(github.event.head_commit.message, 'feat') || startsWith(github.event.head_commit.message, 'fix'))
    with:
      build-command: "npm run build"

  release:
    needs: [build]
    permissions:
      contents: write
    if: |
      github.event_name == 'push' &&
      github.ref_name == 'master' &&
      !contains(github.event.head_commit.message, 'chore(release)') &&
      (startsWith(github.event.head_commit.message, 'feat') || startsWith(github.event.head_commit.message, 'fix'))
    runs-on: ubuntu-latest

    steps:
      - uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Use Node.js
        uses: actions/setup-node@v4
        with:
          node-version: "18.x"
          cache: "npm"
          cache-dependency-path: |
            package-lock.json
            mobile-app/package-lock.json

      - name: Install dependencies
        run: npm ci

      - name: Configure Git
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"

      - name: Create Release with standard-version
        run: npm run release

      - name: Extract version from package.json
        id: extract_version
        run: echo "version=$(node -p "require('./package.json').version")" >> $GITHUB_OUTPUT

      - name: Download build artifacts
        uses: actions/download-artifact@v4
        with:
          name: ${{ needs.build.outputs.build-artifact-name }}
          path: dist

      - name: Push version commit & tag
        run: |
          git push --follow-tags origin ${{ github.ref_name }}

      - name: Create zip archive
        run: cd dist && zip -r ../cicdpipeline-${{ steps.extract_version.outputs.version }}.zip .

      - name: Create GitHub Release
        uses: ncipollo/release-action@v1
        with:
          tag: v${{ steps.extract_version.outputs.version }}
          name: Release v${{ steps.extract_version.outputs.version }}
          bodyFile: CHANGELOG.md
          artifacts: ./cicdpipeline-${{ steps.extract_version.outputs.version }}.zip
          generateReleaseNotes: false
